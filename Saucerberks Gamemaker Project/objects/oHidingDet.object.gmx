<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sHidingDet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oSpecialSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 80
//Create the docking object.
instance_create(x + 82,y,oPlayerDocking)
InitialiseEnemyCollision(random_range(10,30),360)
image_angle = random(360)
SecondsBetweenEmits = random_range(50,250) / room_speed
TimeToDisplayText = (60 * 120)
MessageAlpha = 1
MessageFlash = "Fading"
FadeRate = 0.015

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with oPlayerDocking {
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Bouncing */
StayInsideRoomSpecial()

/* Emitting */

//Create smokes or sparks from the emitters every certain number
//of seconds.
if SecondsBetweenEmits &gt; 0 {
SecondsBetweenEmits = SecondsBetweenEmits - 1 }
else if SecondsBetweenEmits &lt;= 0 {

FindBounds()
NumberOfAttempts = 100

if NumberOfAttempts &gt; 0 {
EmitterXPos = irandom_range(SpriteLeft, SpriteRight)
EmitterYPos = irandom_range(SpriteTop, SpriteBottom)

if position_meeting(EmitterXPos, EmitterYPos, self.id) {
ThisEmitter = instance_create(EmitterXPos,EmitterYPos,choose(oSpecialSmoke,oSpecialSpark))
ThisEmitter.direction = direction
ThisEmitter.speed = speed
SecondsBetweenEmits = random_range(50,250) }
else {
NumberOfAttempts = NumberOfAttempts - 1
}
}
}


//Set the debris' alpha to the same as the players, and flash 
//the debris red.
if instance_exists(oPlayer) and oPlayer.Undocking = false {
if oPlayer.Docked = true {
image_alpha = oPlayer.image_alpha
if oPlayer.TimeBetweenFlashes &gt; 0 {
image_blend = c_white
} else if oPlayer.TimeBetweenFlashes &lt;= 0 {
image_blend = c_red
}
}
} else if instance_exists(oPlayer) and oPlayer.Undocking = true {
image_blend = c_white
}


//Only display the text if this is the first time seeing this debris
//in this playthrough.
if global.MetHidingDet = false {
if TimeToDisplayText &gt; 0 {
TimeToDisplayText = TimeToDisplayText - 1
} else if TimeToDisplayText &lt;= 0 {
global.MetHidingDet = true
}
}

//Fade in and out the text.
if TimeToDisplayText &gt; 0 {
if MessageFlash = "Fading" {
if MessageAlpha &gt; 0 {
MessageAlpha = MessageAlpha - FadeRate
} else if MessageAlpha &lt;= 0 {
MessageFlash = "Growing" 
} 
} else if MessageFlash = "Growing" {
if MessageAlpha &lt; 1 {
MessageAlpha = MessageAlpha + FadeRate
} else if MessageAlpha &gt;= 1 {
MessageFlash = "Fading"
}
}
}









</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the message at the current alpha set by the fading script
//in the Step event, only if the player is not docked and 
//the text display countdown has not reached zero.

if TimeToDisplayText &gt; 0 and (instance_exists(oPlayer) and oPlayer.Docked = false) {

draw_set_alpha(MessageAlpha)

posxHid = x - view_xview[0]
posyHid = y - view_yview[0]

draw_set_font(fHidingText)
draw_set_color(c_aqua)
draw_set_halign(fa_right)
draw_set_valign(fa_right)

draw_text(posxHid + 500,posyHid,"://ERROR DETECTED#://Please Reboot Your#://v.47h ARK-class Docking Module#://For Full Functionality")
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
