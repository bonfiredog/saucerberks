<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sUI2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initial values
ShowBoomersRemaining = false
ShowFieldRemaining = false
TextAlpha = 1.0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If a Boomer has been destroyed, show the Boomer text, before fading it out. To allow you to read 
//the text when there are no Boomers left, it lasts a bit longer before fading.

//Do the same for the name of the level at the start of each level, fading out more slowly.
if ShowBoomersRemaining = true {

if global.NumberOfBoomersRemaining &lt;= 0 {
TextAlpha = TextAlpha - 0.007
} else {
TextAlpha = TextAlpha - 0.01
}

if TextAlpha &lt;= 0 {
TextAlpha = 1
ShowBoomersRemaining = false
}
}

if ShowFieldRemaining = true {
TextAlpha = TextAlpha - 0.0045

if TextAlpha &lt;= 0 {
TextAlpha = 1
ShowFieldRemaining = false
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This draws the actual text, with the variables included for number of boomers left
//and the current level name.

if ShowBoomersRemaining = true {

UIX = view_wview[0] / 2
UIY = view_hview[0] / 2

draw_set_alpha(TextAlpha)
draw_set_font(fBoomersRemaining)
draw_set_color(c_yellow)
draw_set_halign(fa_center)


if global.NumberOfBoomersRemaining &gt; 0 {
if global.NumberOfBoomersRemaining &gt; 1 {
draw_text(UIX,UIY,"There are") }
else if global.NumberOfBoomersRemaining = 1 {
draw_text(UIX,UIY,"There is") }
UIY = UIY + 100
draw_set_color(c_yellow)
draw_set_font(fBoomersRemainingBig)
draw_text(UIX,UIY,global.NumberOfBoomersRemaining)
UIY = UIY + 100
draw_set_color(c_yellow)
draw_set_font(fBoomersRemaining) 
draw_text(UIX,UIY,"remaining!")
} else if global.NumberOfBoomersRemaining &lt;= 0 {
draw_text(UIX,UIY,"No 'Gluttons' Remaining!##" + "Clear The Field!")
}
}



//When the level starts, fade out the name of the debris field name in the centre of the screen

if ShowFieldRemaining = true {

UIX = view_wport[0] / 2
UIY = view_hport[0] / 2

draw_set_alpha(TextAlpha)

draw_set_font (fFieldName)
draw_set_color(c_yellow)
draw_set_halign(fa_center)
draw_text(UIX,UIY,"Now Entering")
UIY = UIY + 100
draw_set_color(c_yellow)
draw_set_halign(fa_center)
draw_set_font(fFieldNameBig)
draw_text(UIX,UIY,global.CurrentGalaxyName)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
