<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set this gun to display behind the player object.
depth = 82

//Set its owner to noone.
Owner = noone

//Define the timer for the shots.
SecondsBetweenShots = 0.05
SecondsSinceLastShot = SecondsBetweenShots 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If the gun has been picked up...
if instance_exists(Owner)



//Make the gun 'stick' to its owner, and face in the same direction...
{
x = Owner.x
y = Owner.y
image_angle = Owner.image_angle
SecondsBetweenShots = 1 / 10



//Increment Timer
SecondsSinceLastShot = SecondsSinceLastShot + 1/room_speed

if oMenu.Mode != "Pause" and oPlayer.Docked = false {
//If we are clicking and the timer is ready to fire
if mouse_check_button(mb_left) and SecondsSinceLastShot &gt;= SecondsBetweenShots {

//Reset the timer...
    SecondsSinceLastShot = 0
    
    MyFlash = instance_create(x,y,oMFGun)
    MyFlash.direction = image_angle
    MyFlash.speed = 200 / room_speed
    MyFlash.image_angle = image_angle


    //Fire a bullet at a certain speed, in the direction we are facing, 
    //play a sound, and create a kickback on the player and the gun.
    MyBullet = instance_create(x,y,oBullet)
    
    MyBullet.Spread = random_range(-10,10)
    
    MyBullet.direction = image_angle + MyBullet.Spread
    MyBullet.speed = 600 / room_speed
    MyBullet.image_angle = image_angle
    
    Kick = 50 / room_speed
    KickDirection = image_angle + 180
    
    Owner.xShunt = lengthdir_x(Kick,KickDirection)
    Owner.yShunt = lengthdir_y(Kick,KickDirection)
    
    ResetShunts()
    
    ScreenShake(25)
    
    audio_play_sound(aShoot, 1, false)
}

}
}


if global.PlayerLives &lt;= 0 {
instance_destroy()
}


CanBePickedUp()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
