<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerWake</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Point it out the back of the player, but face the *sprite* in the direction of the player.
//Confusing, I know.
direction = oPlayer.image_angle - 180
image_angle = oPlayer.image_angle

speed = 100 / room_speed

//This is how long each instance lasts.
SecondsUntilFadeOut = 3

image_xscale = 1.5
image_yscale = image_xscale
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Maintain the strange configuration from the Create event.
if instance_exists(oPlayer) {
direction = oPlayer.image_angle - 180
image_angle = oPlayer.image_angle
}

/* delete it if outside of room */

if x &lt; 0 or y &lt; 0 or x &gt; room_width or y &gt; room_height {

instance_destroy()

}


//Make it decelerate.
Deceleration = 700 / (room_speed * room_speed)
if speed &gt; Deceleration {
speed = speed - Deceleration
} else {
speed = 0
}

//If it has stopped, make it bigger and fade it out before destroying it.
if speed = 0 and instance_exists(self.id) {
//Wait, is this variable even needed? It just relies on image_alpha to know when
//to destroy it.
SecondsUntilFadeOut = SecondsUntilFadeOut - 1/room_speed
image_alpha = image_alpha - 0.03
image_xscale = image_xscale + 0.08
image_yscale = image_xscale
if image_alpha &lt;= 0 {instance_destroy()}
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
