<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//... At the start of the game, the chunk is not in the process of reassembling...
Reassembling = false
//...Nor has it stopped exploded (or indeed even started)
InPosition = false

OriginalX = x
OriginalY = y

SpeedToTake = random_range(350,600)

RotateLeft = random_range(350,500)
RotateRight = random_range(-350,-500)

direction = point_direction(x,y,random_range(0,room_width),random_range(0,room_height))

physics_apply_torque(choose(RotateLeft,RotateRight))
phy_speed_x = lengthdir_x(SpeedToTake,direction)
phy_speed_y = lengthdir_y(SpeedToTake,direction)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.PlayerLives &gt; 0 {
if Reassembling = false {

if phy_speed_x = 0 and phy_speed_y = 0 {
direction = point_direction(x,y,OriginalX,OriginalY)
phy_speed_x = lengthdir_x(SpeedToTake,direction)
phy_speed_y = lengthdir_y(SpeedToTake,direction)
physics_apply_torque(choose(RotateLeft,RotateRight))
Reassembling = true
}
} else if Reassembling = true {
if phy_position_x = OriginalX and phy_position_y = OriginalY {
phy_speed_x = 0
phy_speed_y = 0
}

if phy_speed_x &lt; 0 and phy_speed_y &lt; 0 {
if InPosition = false {
//Set it to be in position and increase the number of bits reassembled.
oGame.BitsReassembled = oGame.BitsReassembled + 1 
InPosition = true
audio_sound_pitch(aBitUnite, oGame.CurrentPitch)
audio_play_sound(aBitUnite, 1, false)
oGame.CurrentPitch = oGame.CurrentPitch + 0.4

}
}

//When all the bits are in position, recreate the player, 
//destroy all the bits, and set the bits reassembled to 0.
if oGame.BitsReassembled &gt;= oGame.NumberOfBitsThePlayerIsMadeOf {
instance_create(x,y,oPlayer)
instance_create(x,y,oTutSpawn)
audio_play_sound(aPlayerReform, 1, false)
oGame.CurrentPitch = 0
with oBit { instance_destroy() }
oGame.BitsReassembled = 0
}
}   
}













</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>2.5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>2</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>9,9</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
