<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerChunk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Send us flying out at a random speed and direction */
speed = random_range(750,1500) / room_speed
direction = random(360)

//When we're created, remember our original position so we can head back to it
OriginalX = x
OriginalY = y

//Initially, we are not in the reassembling phase
Reassembling = false

//Nor have we returned to the original position
InPosition = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//We measure acceleration in speed lost per second, so room_speed factors into it twice

//Deceleration is for when we're blowing up
Deceleration = 1500 / (room_speed * room_speed)
//Acceleration is for when we're sucking back in
Acceleration = 300 / (room_speed * room_speed)

if Reassembling = false {

    //We are still flying out from the initial explosion
    
    if speed &gt; Deceleration {
        
        /* If there's still some speed to lose */
        
        //Face the direction we're going
        image_angle = direction
        //Reduce our speed by Deceleration
        speed = speed - Deceleration
        
    } else {
    
        /* Our speed is so low, that subtracting Deceleration would make it zero or negative */
        
        //Stop completely
        speed = 0
        //Get ready to head in the opposite direction
        direction = direction + 180
        //Enter reassembling phase
        Reassembling = true
        
    }
    
} else {

    /* We've stopped flying out and and now want to be sucked back in */
    
    //Increase our speed
    speed = speed + Acceleration
    
    //If our distance to our birthplace is so small that we're about to reach or go past it
    if point_distance(x,y,OriginalX,OriginalY) &lt; speed {
    
        //Stop
        speed = 0
        
        //Did we only just arrive?
        if InPosition = false {
        
            //Yes, we weren't InPosition before, so count us as having arrived.
            oGame.BitsReassembled = oGame.BitsReassembled + 1
            //Remember that we are here and have already been counted
            InPosition = true
            
        }
        
        //Have all of the pieeces returned yet?
        if oGame.BitsReassembled &gt;= oGame.NumberOfBitsThePlayerIsMadeOf {
        
            //Yes! The number of bits that have returned to position is the number of bits that came out of us
            
            //Re-create the player
            instance_create(x,y,oPlayer)
            //Destroy all the chunks
            with oPlayerChunk { instance_destroy() } 
            //Reset the 'bits reassembled' count            
            oGame.BitsReassembled = 0
            
        }
        
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>9,6</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
