<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>WPressed = false
SPressed = false
DPressed = false
APressed = false
LeftClicked = false
RightClicked = false
Stage = "Controls"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 20
y = 20
CurrentY = y
Margin = 10
draw_set_halign(fa_left)
draw_set_font(fTutorial)

if Stage = "Controls" {
    if WPressed = false {
        DrawTextAndUpdateCurrentY("W: move up")
        if keyboard_check(ord('W')) { WPressed = true }
    }
    if SPressed = false {
        DrawTextAndUpdateCurrentY("S: move down")
        if keyboard_check(ord('S')) { SPressed = true }
    }
    if DPressed = false {
        DrawTextAndUpdateCurrentY("D: move right")
        if keyboard_check(ord('D')) { DPressed = true }
    }
    if APressed = false {
        DrawTextAndUpdateCurrentY("A: move left")
        if keyboard_check(ord('A')) { APressed = true }
    }
    if LeftClicked = false {
        DrawTextAndUpdateCurrentY("Left click: shoot")
        if mouse_check_button(mb_left) { LeftClicked = true }
    }
    if WPressed and SPressed and DPressed and APressed and LeftClicked {
        Stage = "Swarmers"
        instance_create(random(room_width),0,oSwarmer)
    }
}

if Stage = "Swarmers" {

    DrawTextAndUpdateCurrentY("Shoot all the horrible red things")
    
    if instance_number(oSwarmer) &lt; 1 {
        Stage = "Boomers"
        TutorialBoomer = instance_create(random(room_width),0,oBoomer)        
    }
    
}

if Stage = "Boomers" {

    DrawTextAndUpdateCurrentY("The hideous green things are invincible.")
    DrawTextAndUpdateCurrentY("Unless they eat a red thing.")
    
    if instance_exists(TutorialBoomer) {
        if TutorialBoomer.ThingsEaten = 0 {
            DrawTextAndUpdateCurrentY("Fire some bait at a red thing.")
        } else {
            CurrentY = CurrentY + 50
            DrawTextAndUpdateCurrentY("Shoot the green thing.")
        }
    } else {
        //We're done! Show the victory screen!
        oMenu.Mode = "Victory"
    }
        
    CurrentY = CurrentY + 50
    
    if RightClicked = false {
        DrawTextAndUpdateCurrentY("Right click: fire bait")
        if mouse_check_button(mb_right) { RightClicked = true }
    }
    
    if instance_number(oSwarmer) &lt; 1 {
        instance_create(random(room_width),0,oSwarmer)
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
