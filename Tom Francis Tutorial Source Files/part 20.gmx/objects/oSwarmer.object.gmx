<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sExplodingEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 10

State = "Idle"
InitialiseEnemyCollision(25,random(360))

image_xscale = 0.6
image_yscale = image_xscale

Eater = noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Some ai stuff */
if State = "Idle" {

    sprite_index = sExplodingEnemy
    
    if instance_exists(Eater) {    
        State = "Eaten"    
    } else if IHaveLineOfSightTo(oPlayer) {
        //If we're looking in the player's direction
        DirectionToPlayer = point_direction(x,y,oPlayer.x,oPlayer.y)
        RelativeDirectionToPlayer = abs(image_angle - DirectionToPlayer)
        HalfFieldOfView = 45        
        if RelativeDirectionToPlayer &lt; HalfFieldOfView
        or RelativeDirectionToPlayer &gt; 360 - HalfFieldOfView {
            State = "Alert"
        }
    }
    
} else if State = "Alert" {

    sprite_index = sExplodingEnemyAlert
    
    if instance_exists(Eater) {    
        State = "Eaten"    
    } else if IHaveLineOfSightTo(oPlayer) {
        //Go towards him
        direction = point_direction(x,y,oPlayer.x,oPlayer.y)
    } else {
        State = "Idle"
    }
        
} else if State = "Eaten" {
    
    if instance_exists(Eater) {
        //Move with the enemy that ate us
        x = Eater.x
        y = Eater.y
    } else {
        //Our eater has been dsetroyed!
        ExplodeIntoANumberOfChunks(25,oExplodingEnemyChunk)
    }

}


/* Facing */
image_angle = direction

StayInsideRoom()

EnemyCollisionWithSolids()

/* Damage */
if HitByProjectile() {
    ScreenShake(25)
    ExplodeIntoANumberOfChunks(15,oSwarmerChunk)
    audio_play_sound(aExplode,1,false)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
