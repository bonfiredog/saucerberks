<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sLiquidShot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Put the shot behind things, give it a random lifetime once shot, 
//make sure it is not exploding, set the life of its puddle if not shot.

depth = -120

SecondsUntilWeExplode = random_range(0.1,0.2)
Exploding = false

PuddleLifeTime = 2
SecondsUntilFadeOut = PuddleLifeTime

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/* delete bullet when outside of room */

if x &lt; 0 or y &lt; 0 or x &gt; room_width or y &gt; room_height {

instance_destroy()

}

//If we are ABOUT to hit a block, stop.
if place_meeting(x + hspeed, y + vspeed, oSolid) {

speed = 0

}



//Make it decelerate.
Deceleration = 400 / (room_speed * room_speed)
if speed &gt; Deceleration {
speed = speed - Deceleration
} else {
speed = 0
}


//Make it shunt and enemy if it touches them.
EnemyHit = instance_place(x,y,oEnemy)

if instance_exists (EnemyHit) {

EnemyHit.xShunt = lengthdir_x(speed,direction)
EnemyHit.yShunt = lengthdir_y(speed,direction)
}





//Explode when hit
if Exploding = true{
SecondsUntilWeExplode = SecondsUntilWeExplode - 1/room_speed
if SecondsUntilWeExplode &lt; 0 {
instance_create(x,y,oExplosion)
instance_destroy()
}
} else {
ProjectileHit = instance_place(x,y,oProjectile)
if instance_exists(ProjectileHit) {
Exploding = true
}
}

if speed = 0 and instance_exists(self.id) {
SecondsUntilFadeOut = SecondsUntilFadeOut - 1/room_speed
image_alpha = SecondsUntilFadeOut / PuddleLifeTime
image_xscale = 1 + (1 - image_alpha)
image_yscale = image_xscale
if image_alpha &lt;= 0 {instance_destroy()}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
