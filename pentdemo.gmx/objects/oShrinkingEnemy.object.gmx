<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set the speed of the animation.
image_speed = 2/room_speed

//Get it going!
InitialiseEnemyCollision(90,360)

//Make them half the normal size
image_xscale = 0.5
image_yscale = image_xscale
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Eat Globs From Wave Gun */
DetectionRange = 400
EatRange = 10

NearestGlob = instance_nearest(x,y,oGlob)

//If there IS a glob, find the closest!
if instance_exists(NearestGlob) {

//If it is within 400 pixels...
DistanceToGlob = point_distance(x,y,NearestGlob.x,NearestGlob.y)

if DistanceToGlob &lt; DetectionRange {
//Can I reach it?

if IHaveLineOfSightTo(NearestGlob) {
    //Go towards it!
    direction = point_direction(x,y,NearestGlob.x,NearestGlob.y)
    
    //Then, when close enough, eat the glob
    if DistanceToGlob &lt; EatRange {
        with NearestGlob { instance_destroy() }
        GrowthRate = 0.1
        MaximumSize = 2
        if image_xscale &lt; MaximumSize {
        image_xscale = image_xscale + GrowthRate
        image_yscale = image_yscale + GrowthRate
        if place_meeting(x,y,oSolid) {
          image_xscale = image_xscale - GrowthRate
        image_yscale = image_yscale - GrowthRate
        }
        
        }
        
             }
       }
    }
            
}








/* Facing */
image_angle = direction

/* Bouncing */

EnemyCollisionWithSolids()
StayInsideRoom()

/* Damage */

if HitByProjectile() {

        //Shrink ourselves
        audio_play_sound(aShrink, 1, false)
image_xscale = image_xscale + 0.4
image_yscale = image_xscale
image_alpha = 0.5

image_xscale = image_xscale - 0.6
image_yscale = image_xscale
image_alpha = 1.0


    //Destroy us if we've shrunk ourselves to oblivion
    
    if image_xscale &lt;= 0 {
    audio_play_sound(aShrinkDestroy, 1, false)
    instance_create(x,y,oPowerUp)
    instance_destroy()
    }

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
