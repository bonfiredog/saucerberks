<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Screen Bullshit */

window_set_fullscreen(true)

//Set width and height to that of the player's screen
ScreenWidth = display_get_width()
ScreenHeight = display_get_height()

//How much of room on screen?
view_wview = ScreenWidth
view_hview = ScreenHeight

//How much of our screen do we want this to take up?
view_wport = ScreenWidth
view_hport = ScreenHeight

//Ignore...
surface_resize(application_surface, ScreenWidth, ScreenHeight)

//Tell the menu that we are on the title screen.
Mode = "Titles"

if file_exists("HighScore.txt") {
LoadHighScore()
} else {
global.HighScore = 0
}

global.PlayerLives = 3

TitleAlpha = 0
image_alpha = 0

TitlePageFadeIn = false

global.PlayedSoundYet = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If we press the escape key, bring up the title screen, or remove it. 


if room = rStart and TitlePageFadeIn = true {
if TitleAlpha &lt; 1 {
image_alpha = TitleAlpha + 0.01 
}
}


if room = rStart and TitlePageFadeIn = true {
if TitleAlpha &lt; 1 {
TitleAlpha = TitleAlpha + 0.01 
}
} 

if room = rLevel1 or room = rTutorial {
TitleAlpha = 1.0
}

if room != rStart {
if keyboard_check_pressed(vk_escape) {
if Mode = "Game" {Mode = "Titles"} else {Mode = "Game" }

if room = rLevel1 or room = rTutorial {
audio_play_sound(aMenu,1,false)
}
}

if keyboard_check_pressed(ord('P')) {
if Mode = "Titles" {   } 

else if Mode = "Victory" {    }

else if Mode = "Pause" { Mode = "Game" if room = rLevel1 or room = rTutorial {
audio_play_sound(aMenu,1,false)
} }

else if Mode = "Game" { Mode = "Pause" if room = rLevel1 or room = rTutorial {
audio_play_sound(aMenu,1,false)
} }
}
}


if instance_number(oEnemy) &lt; 1 and room = rLevel1 {
if Mode != "Victory" {audio_play_sound(aVictory,1,false)}
if Mode != "Victory" {oCurrentScore.CurrentScore = oCurrentScore.CurrentScore + 1}
Mode = "Victory"
}



if global.PlayerLives &lt;= 0 {
if Mode != "Lose" {audio_play_sound(aLose,1,false)}
Mode = "Lose"
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//In titles mode, show it always. In game mode, show the bar.

if Mode = "Titles" {

draw_set_alpha(TitleAlpha)


if file_exists("HighScore.txt") {
    x = room_width - 200
    y = 50
    
    draw_set_halign(fa_right)
    draw_set_color(c_white)
    
    draw_set_font(fHighScore)
    draw_text(x,y,"Most Dignities Restored:           " )
     draw_set_font(fHighScoreBig)
    y = 38
    HighScoreFlash = draw_text(x,y, global.HighScore)
    }

    x = view_wport[0] / 2
    y = 300
    
    CurrentY = y
    Margin = 10
    draw_set_halign(fa_center)
    if room = rStart {instance_create(x,y,oTitle)}
    
    y = y + 150
    
    draw_set_font(fSubtitle)
    if room = rStart {draw_set_color(c_lime)} else if room = rLevel1 or room = rTutorial {draw_set_color(c_yellow)}
    draw_text(x,y,"Detritus of battles and wrecks past litter the spaceways... memorials to the dead.")
    y = y + 50
    draw_text(x,y,"Restore their dignity, Saucerberk! Remove the alien desecration!!")

    CurrentY = CurrentY + 280
    
    draw_set_font(fMenu)
    draw_set_color(c_green)
    
    if ButtonPressed("Start") {
    oCurrentScore.CurrentScore = 0 
    audio_stop_sound(aSaucerberks)
    global.PlayerLives = 3
    Mode = "Game"
    room_goto(rLevel1)
    }
    
    if ButtonPressed("Tutorial First?") {
    oCurrentScore.CurrentScore = 0 
    audio_play_sound(aLose,1,false)
    global.PlayerLives = 3
    Mode = "Game"
    room_goto(rTutorial)
    }
    
    if ButtonPressed("Quit") {
    game_end()
    }
} else if Mode = "Game" {

with oTitle {instance_destroy() }

} else if Mode = "Pause" {

   x = view_wport[0] / 2
    y = view_hport[0] / 2
    
    CurrentY = y
    Margin = 10
    
    draw_set_halign(fa_center)
    draw_set_color(c_lime)
    
    draw_set_font(fTitle)
    DrawTextAndUpdateCurrentY("PAUSED")


} else if Mode = "Victory" {

    x = view_wport[0] / 2
    y = 200
    
    CurrentY = y
    Margin = 10
    
    draw_set_halign(fa_center)
    draw_set_font(fTitle)
    draw_set_colour(c_lime)
    DrawTextAndUpdateCurrentY("Debris Field Cleared!")
    
    draw_set_font(fHighScore)
    draw_set_colour(c_white)
    
    DrawTextAndUpdateCurrentY("Current Fields Cleared:")
    draw_set_font(fHighScoreBig)
    draw_text(x,CurrentY,oCurrentScore.CurrentScore)
    CurrentY = CurrentY + 90
    draw_set_font(fHighScore)
    DrawTextAndUpdateCurrentY("Most Fields Cleared:")
    draw_set_font(fHighScoreBig)
    draw_text(x,CurrentY,global.HighScore)
    CurrentY = CurrentY + 90
    
    draw_set_font(fMenu)
    draw_set_colour(c_green)
    
    if ButtonPressed("Next Field?") {
    if room = rLevel1 {
    if oCurrentScore.CurrentScore &gt; global.HighScore {
    SaveHighScore()
    }
    }
    if instance_exists(oGrenadeGun) {
    with oGrenadeGun {
    instance_destroy()
    }
    }
    Mode = "Game"
    room_goto(rLevel1)
    }
    
    if ButtonPressed("Quit?") {
    game_end()
    }
    
    
   } else if Mode = "Lose" {
   
    x = view_wport[0] / 2
    y = 150
    
    CurrentY = y
    Margin = 10
    
    draw_set_halign(fa_center)
    draw_set_colour(c_red)
    
    draw_set_font(fFailTitle)
    DrawTextAndUpdateCurrentY("You Were Destroyed, You Saucerberk!")
    
    draw_set_font(fSubtitle)
    draw_set_color(c_white)
    DrawTextAndUpdateCurrentY("You're very clumsy and a failure: we could use a pilot like you...")
    
    CurrentY = CurrentY + 50
    CurrentY = CurrentY + Margin
    
    draw_set_font(fMenu)
    draw_set_color(c_lime)
    
    if ButtonPressed("Again?") {
    oCurrentScore.CurrentScore = 0 
    global.PlayerLives = 3
    Mode = "Game"
    room_goto(rLevel1)
    }
    
    if ButtonPressed("Brush Up On The Controls?") {
    oCurrentScore.CurrentScore = 0 
    global.PlayerLives = 3
    Mode = "Game"
    room_goto(rTutorial)
    }
    
    if ButtonPressed("Quit?") {
    game_end()
    }
   }
   
   



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
