<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerJets</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set the player's WeaponCount to 0.
WeaponCount = 0

//Set The WeaponIndex to the default.
SelectedWeaponIndex = 0

depth = -11

//Set Facing to 0
Facing = 0
//Set initial power to 5, define the maximum
Power = 5
PowerMax = 50

Countdown = 120

//Make sure there is no shunt on the player
ResetShunts()

instance_create(x,y,oRapidFireGun)
instance_create(x,y,oBaitGun)
instance_create(x,y,oTutSpawn)

Docked = false

Owner = noone

TimeBetweenFlashes = 120

Colliding = false

Undocking = false

WPressed = false
SPressed = false
APressed = false
DPressed = false
LeftClicked = false
Stage = "Controls"
RightClicked = false


WDrifting = false
SDrifting = false
ADrifting  = false
DDrifting = false

BoomerStage = "First"

BoomerStageChange = 240

TutDebrisSpawn = false
TutDebCount = irandom_range(40,80)
TutEndSpawn = false

SoundPlay1 = false
SoundPlay2 = false
SoundPlay3 = false
SoundPlay4 = false
SoundPlay5 = false
SoundPlay6 = false
SoundPlay7 = false
SoundPlay8 = false
SoundPlay9 = false

image_xscale = 1.5
image_yscale = image_xscale

GrenadePickUpFlash = false
NumberOfFlashes = 3
TimeInBetweenFlashes = 15
TimeOfEachFlash = 6

TimeToDisplay = 180

CollisionSoundPlayed = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(ord('W')) = false and keyboard_check(ord('S')) = false and keyboard_check(ord('A')) = false and keyboard_check(ord('D')) = false and speed &gt; 0 {
DriftSpeed = 10 / room_speed
speed = speed - DriftSpeed
}

//No matter whether the player is docked or not, stop immediately if the game is paused.
if oMenu.Mode = "Pause" {
oPlayer.speed = 0
} 

/* ------------------------------------------------------------------------------------------------------ */

//The following applies if the player is not docked (i.e. if they have control).
if Docked = false {
//Create a wake if the player is moving (once per step).
if speed &gt; 0 {
instance_create(x,y,oPlayerWake)
}

//Put the player back into the room if they stray beyond it.
if x &lt; 0 {x = 0}
if y &lt; 0 {y = 0}

if x &gt; room_width {x = room_width}
if y &gt; room_height {y = room_height}


/* -------------------------------------------------------------------------------------------------------- */

//The following only occurs if the game is not paused and the player is not docked.
if oMenu.Mode != "Pause" and Undocking = false {


/* Collision */
//If a block is about to touch us, it's big enough to collide with, and we aren't already colliding with something else...
SolidTouching = instance_place(x + hspeed, y + vspeed, oSolid)

if instance_exists(SolidTouching) and SolidTouching.image_xscale &gt; 0.8{
//Remember the player's speed just before the collision. If they were not moving, set the speed to the standard player speed.
OriginalSpeed = 350 / room_speed
ScreenShake(25)
if CollisionSoundPlayed = false {
audio_sound_pitch(aCollision,random_range(0.8,2))
audio_play_sound(aCollision,1,false)
CollisionSoundPlayed = true
}
instance_create(x + hspeed,y + vspeed,oContactFlash)
//Change the player's direction to almost the opposite of what they hit, and set them as 'in the process of colliding'.
if speed &gt; 0 {
direction = direction - random_range(130,220)
} else if speed &lt;= 0 {
direction = point_direction(x,y,SolidTouching.x,SolidTouching.y) - random_range(130,220)
}
speed = OriginalSpeed
Colliding = true
CollisionSoundPlayed = false
}


//If the player is 'in the process of colliding, set a deceleration rate, and have it decelerate by that amount.
if Colliding = true {
Deceleration = 0.5
if speed &gt; 0 {
speed = speed - Deceleration
} else if speed &lt;= 0 {
Colliding = false
}
}

}

/* ---------------------------------------------------------------------------------------------- */


//The following only occurs if the game is not paused, and the player is not 'in the process of colliding', and they are not docked.
if oMenu.Mode != "Pause" and Colliding = false and Undocking = false{

/* Movement */
//Speed
MySpeed = 350 / room_speed

//Up
if keyboard_check(ord('W')) {
vspeed = -MySpeed
}


//Down
if keyboard_check(ord('S')) {
vspeed = MySpeed
}


//Left
if keyboard_check(ord('A')) {
hspeed = -MySpeed
}


//Right
if keyboard_check(ord('D')) {
hspeed = MySpeed
}



//If there is a Shunt happening, let it happen and then reset.
hspeed = hspeed + xShunt
vspeed = vspeed + yShunt
ResetShunts()


/* Facing */
Facing = point_direction(x,y,mouse_x,mouse_y)



/* ----------------------------------------------------------------------------------------------------------- */



/* Death */
//If an enemy class is touching the player...
EnemyTouchingMe = instance_place(x,y,oEnemy)
if instance_exists(EnemyTouchingMe) or place_meeting(x,y,oGrenadeTargetExplosion) or place_meeting(x,y,oGrenadeBit) or place_meeting(x,y,oTurretDetTurretBolt) {
ScreenShake(80)
with oSwarmer {
direction = point_direction(oPlayer.x,oPlayer.y,x,y)
RunAwaySpeed = true
RunAwayCountdown = random_range(120,240)
}
//...Explode into chunks, with how many bits the player is made of, using the player chunk object.
global.PlayerLives = global.PlayerLives - 1
with oBaitGun { instance_destroy() }
with oRapidFireGun { instance_destroy() }
if instance_exists(oGrenadeGun) and oGrenadeGun.Owner = oPlayer.id { with oGrenadeGun { instance_destroy() } } 
ExplodeIntoANumberOfChunks(oGame.NumberOfBitsThePlayerIsMadeOf, oBit)  
//Play the player death sound.
audio_play_sound(aPlayerDeath, 1, false) 
instance_create(x,y,oPlayerExplosion)
}
}

//If not picked up, flash yellow.

if GrenadePickUpFlash = true {
if NumberOfFlashes &gt; 0 {
if TimeInBetweenFlashes &gt; 0 {
TimeInBetweenFlashes = TimeInBetweenFlashes - 1
} else if TimeInBetweenFlashes &lt;= 0 {
if TimeOfEachFlash &gt; 0 {
TimeOfEachFlash = TimeOfEachFlash - 1
image_blend = c_lime
} else if TimeOfEachFlash &lt;= 0 {
audio_sound_pitch(aFlashBeep, 1.8)
audio_play_sound(aFlashBeep,1,false)
image_blend = c_white
NumberOfFlashes = NumberOfFlashes - 1
TimeInBetweenFlashes = 15
TimeOfEachFlash = 6
}
}
} else if NumberOfFlashes &lt;= 0 {
GrenadePickUpFlash = false
}
}




//If we touch the Player Docking object, remove all functionality.

MyDock = instance_place(x,y,oPlayerDocking)
if instance_exists(MyDock) and Undocking = false and Docked = false {
Owner = MyDock
instance_create(x,y,oDockingRing)
instance_create(x,y,oSmokeLauncher)
Docked = true

with oSwarmer {
direction = point_direction(oPlayer.x,oPlayer.y,oPlayer.x-180,oPlayer.y-180)
}
}


} else if Docked = true {
x = Owner.x
y = Owner.y
vspeed = Owner.vspeed
hspeed = Owner.hspeed
direction = Owner.direction
if instance_exists(oGrenadeGun){oGrenadeGun.depth = 82}
depth = 81
image_alpha = 0.9

if TimeBetweenFlashes &gt; 0 {
image_blend = c_dkgray
TimeBetweenFlashes = TimeBetweenFlashes - 1
} else if TimeBetweenFlashes &lt;= 0 {
image_blend = c_yellow 
TimeBetweenFlashes = 120
audio_play_sound(aBeep, 1, false)
}

if keyboard_check(ord('U')) {
Undocking = true
oDockingRing.Growing = false
oDockingRing.Shrinking = true
instance_create(x,y,oUndockingExplosion)
instance_create(x,y,oSmokeLauncher)
audio_play_sound(aUndock,1,false)
image_alpha = 1.0
image_blend = c_yellow
depth = -11
speed = 20
direction = Owner.image_angle - 180
image_angle = random(360)
Owner = noone
Docked = false
}
}

if Undocking = true {
speed = speed - 0.3
if speed &lt;= 0 {
if instance_exists(oGrenadeGun) {oGrenadeGun.depth = -121}
image_blend = c_white
Undocking = false
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(oTutorial)
and oTutorial.TutMode = "NoTitles" {

posx = x - view_xview[0]
posy = y - view_yview[0]

draw_set_font(fTutorial)
draw_set_colour(c_lime)

if Stage = "Controls" {

if WPressed = false and oMenu.Mode != "Pause" and oMenu.Mode != "Titles" {
draw_set_colour(c_red)
draw_text(posx - 100,(posy - 90),"W")
draw_set_colour(c_lime)
draw_text(posx - 80,posy - 90,"hy don't we fly up?")

if keyboard_check(ord('W')) {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
WPressed = true }
}

if SPressed = false and oMenu.Mode != "Pause" and oMenu.Mode != "Titles"{
draw_set_colour(c_red)
draw_text(posx - 145,posy + 90,"S")
draw_set_colour(c_lime)
draw_text(posx - 130,posy + 90,"ure, we could go down instead.")
if keyboard_check(ord('S')) {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
SPressed = true }
}

if APressed = false and oMenu.Mode != "Pause" and oMenu.Mode != "Titles"{
draw_set_colour(c_red)
draw_text(posx - 200,posy,"A")
draw_set_colour(c_lime)
draw_text(posx - 188,posy,"nd left...")
if keyboard_check(ord('A')) {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
APressed = true }
}

if DPressed = false and oMenu.Mode != "Pause" and oMenu.Mode != "Titles"{
draw_set_colour(c_red)
draw_text(posx + 200,posy,"D")
draw_set_colour(c_lime)
draw_text(posx + 213,posy,"on't fly right!")
if keyboard_check(ord('D')) {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
DPressed = true }
}

if WPressed and SPressed and APressed and DPressed = true and LeftClicked = false and oMenu.Mode != "Pause" and oMenu.Mode != "Titles" {
draw_set_colour(c_red)
draw_text(posx - 150,posy - 120,"Left Click:")
draw_set_colour(c_lime)
draw_text(posx - 50,posy - 120,"Shoot a little yellow ball. It's deadly! Sometimes.")
if mouse_check_button(mb_left) {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
LeftClicked = true }
}





if LeftClicked = true {
    Stage = "Swarmers"
    instance_create(x + 400, y - 200, oTutSpawn)
    TutSwarmer = instance_create(x + 400, y - 200, oSwarmer)
    }
}






if Stage ="Swarmers" and oMenu.Mode != "Pause" and oMenu.Mode != "Titles" {

if SoundPlay1 = false {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
SoundPlay1 = true
}


 draw_text(posx + 90, posy + 60, "What a horrid little alien!")
 draw_text(posx + 100, posy + 80, "You had better shoot her.")

 if instance_number(oSwarmer) &lt; 1 {
 Stage = "Boomers"
 instance_create(x - 400, y + 200, oTutSpawn)
 TutorialBoomer = instance_create(x - 400, y + 200, oBoomer)
 }
}



if Stage = "Boomers" and oMenu.Mode != "Pause" and oMenu.Mode != "Titles" {

if instance_exists(TutorialBoomer) {

if BoomerStage = "First" {
if oBoomer.BoomerShot = false and oMenu.Mode != "Pause" and oMenu.Mode != "Titles" {

if SoundPlay2 = false {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
SoundPlay2 = true
}
draw_text(posx + 90 ,posy + 60,"There's another nasty customer.")
draw_text(posx + 100,posy + 80,"Why don't you try and shoot her?")

} else if oBoomer.BoomerShot = true and oMenu.Mode != "Pause" and oMenu.Mode != "Titles" {
if SoundPlay3 = false {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
SoundPlay3 = true
}
draw_text(posx + 90 ,posy + 60,"Whoops! That won't work!")
draw_text(posx + 100,posy + 80,"Unless you can persuade her to eat her friends...") 

if BoomerStageChange &gt; 0 {
BoomerStageChange = BoomerStageChange - 1
} else if BoomerStageChange &lt;= 0 {
BoomerStage = "Second"
}
} 
} else if BoomerStage = "Second" {

if TutorialBoomer.ThingsEaten = 0 and oMenu.Mode != "Pause" and oMenu.Mode != "Titles" {
if SoundPlay4 = false {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
SoundPlay4 = true
}
draw_text(posx + 90,posy + 60,"You'll need to attach some bait to her friend.")
draw_text(posx + 100,posy + 80,"You may need to lay a trail to attract her!")
} else if TutorialBoomer.ThingsEaten = 1 and oMenu.Mode != "Pause" and oMenu.Mode != "Titles" {
draw_text(posx + 90,posy + 60,"Now give her a shot!")
if SoundPlay5 = false {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
SoundPlay5 = true
}
}

if RightClicked = false and oMenu.Mode != "Pause" and oMenu.Mode != "Titles"  {
draw_set_colour(c_red)
draw_text(posx - 120,posy - 90, "Right Click:")
draw_set_colour(c_lime)
draw_text(posx - 10,posy - 90,"Shoot bait?")
if mouse_check_button(mb_right) {RightClicked = true }
}

if instance_number(oSwarmer) &lt; 1 {
 instance_create(x + 400, y - 500, oTutSpawn)
 instance_create(x + 400, y - 500 , oSwarmer)
}


}

} else {
Countdown = Countdown - 0.09

if Countdown &gt; 100 {
if SoundPlay6 = false {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
SoundPlay6 = true
}
draw_set_colour(c_yellow)
draw_text(posx + 90, posy + 60, "Well done! You're nearly ready to")
draw_text(posx + 100, posy + 80, "tackle the debris fields...")
}

if Countdown &lt; 100 and Countdown &gt; 60 {
if SoundPlay7 = false {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
SoundPlay7 = true
}
draw_set_colour(c_lime)
draw_text(posx + 90, posy + 60, "Feel free to practice until you are ready to go.")
draw_text(posx + 100, posy + 80, "Just keep in mind...")
}

if Countdown &lt; 100 {
if instance_number(oBoomer) &lt; 1 {
instance_create(x + 400, y - 500, oTutSpawn)
instance_create(x + 400, y - 500, oBoomer)
}
if instance_number(oSwarmer) &lt; 3 {
XSpawn = random_range(200,500)
YSpawn = random_range(200,500)
instance_create(x - XSpawn, y - YSpawn, oTutSpawn)
instance_create(x - XSpawn, y - YSpawn, oSwarmer)
}
}

if Countdown &lt; 70 and Countdown &gt; 40 {
if SoundPlay8 = false {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
SoundPlay8 = true
}
if instance_exists(oTutEnd) {
if oTutEnd.PlayerTouch = false {
draw_set_colour(c_lime)
draw_text(posx + 80,posy + 80,"You're going to be seeing a lot of debris like this!")
} else if instance_exists(oTutEnd) = false { 
draw_set_colour(c_lime)
draw_text(posx + 80,posy + 80,"You're going to be seeing a lot of debris like this!")
}
}
if TutDebrisSpawn = false {
if TutDebCount &gt; 0 {
ThisDebrisSpawnyNegative = random_range(-30,-800)
ThisDebrisSpawnyPositive = random_range(30,800)
ThisDebrisSpawnxNegative = random_range(-30,-800)
ThisDebrisSpawnxPositive = random_range(30,800)

ThisDebrisSpawnxChosen = choose(ThisDebrisSpawnxNegative,ThisDebrisSpawnxPositive)
ThisDebrisSpawnyChosen = choose(ThisDebrisSpawnyNegative,ThisDebrisSpawnyPositive)

instance_create(room_width/2 + ThisDebrisSpawnxChosen,room_height/2 + ThisDebrisSpawnyChosen,oTutSpawn)
ThisDebris = instance_create(room_width/2 + ThisDebrisSpawnxChosen,room_height/2 + ThisDebrisSpawnyChosen,choose(oDetritus1,oDetritus2,oDetritus3,oDetritus4,oDetritus5,oDetritus6,oDetritus7,oDetritus8,oDetritus9,oDetritus10,oDetritus11,oDetritus12,oDetritus13,oDetritus14,oDetritus15))
TutDebCount = TutDebCount - 1
} else if TutDebCount &lt;= 0 {
TutDebrisSpawn = true
}
}
}

if Countdown &lt; 60 and Countdown &gt; 40 {
if TutEndSpawn = false {
instance_create(oPlayer.x + 480, oPlayer.y + 200, oTutSpawn)
instance_create(oPlayer.x - 480, oPlayer.y + 200, oTutEnd)
TutEndSpawn = true }
}

if Countdown &lt; 40 {
if SoundPlay9 = false {
audio_sound_pitch(aTextChange,random_range(0.3,1.5))
audio_play_sound(aTextChange,1,false)
SoundPlay9 = true
}
if oTutEnd.PlayerTouch = false {
draw_set_colour(16711935)
draw_text(posx + 80,posy + 80,"Fly into that little purple number when you're ready to go!")
} else if instance_exists(oTutEnd) = false { 
draw_set_colour(c_lime)
draw_text(posx + 80,posy + 80,"Fly into that little purple number when you're ready to go!")
}
}

}
}
}



//When first picked up, display a message about the GrenadeGun.

if instance_exists(oGrenadeGun) and oGrenadeGun.PickUpMessage = true {

posx = x - view_xview[0]
posy = y - view_yview[0]

if TimeToDisplay &gt; 0 {
TimeToDisplay = TimeToDisplay - 1 
draw_set_font(fTutorial)
draw_set_colour(c_lime)
draw_text(posx,posy - 100,"A Reaper bomb module! A real antique!")
} else if TimeToDisplay &lt;= 0 {
TimeToDisplay = 180
oGrenadeGun.PickUpMessage = false
}
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, Facing, image_blend, image_alpha)




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
