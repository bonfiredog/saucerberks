<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGrenadeDet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oSpecialSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 80
InitialiseEnemyCollision(random_range(20,35),360)
image_xscale = 1.3
image_yscale = image_xscale
image_angle = random(360)
SecondsBetweenEmits = random_range(30,100) / room_speed
instance_create(x,y,oGrenadeTarget)
SetSpinning(-0.8,-0.4,0.4,0.4)
TimeBetweenClutter = random_range(25,85)
MSecondsBetweenClutter = random(100)
ClutterToDistribute = random(60)
TimeToDisplayText = (60 * 120)
MessageAlpha = 1
MessageFlash = "Fading"
FadeRate = 0.015
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Bouncing */
StayInsideRoom()

image_angle = image_angle + SpinDirection


/* Emitting */
if SecondsBetweenEmits &gt; 0 {
SecondsBetweenEmits = SecondsBetweenEmits - 1 }
else if SecondsBetweenEmits &lt;= 0 {

FindBounds()
NumberOfAttempts = 100

if NumberOfAttempts &gt; 0 {
EmitterXPos = irandom_range(SpriteLeft, SpriteRight)
EmitterYPos = irandom_range(SpriteTop, SpriteBottom)

if position_meeting(EmitterXPos, EmitterYPos, self.id) {
ThisEmitter = instance_create(EmitterXPos,EmitterYPos,choose(oSpecialSmoke,oSpecialFlame,oSpecialSpark))
ThisEmitter.direction = direction
ThisEmitter.speed = speed
SecondsBetweenEmits = random_range(30,100) / room_speed }
else {
NumberOfAttempts = NumberOfAttempts - 1
}
}
}

//Emit random clouds of debris, in random directions, every few moments.

if MSecondsBetweenClutter &gt; 0 {
MSecondsBetweenClutter = MSecondsBetweenClutter - 1 
} else if MSecondsBetweenClutter &lt;= 0 {
if ClutterToDistribute &gt; 0 {
ThisClutter = instance_create(x,y,choose(oDetritus10, oDetritus6, oDetritus9, oDetritus4, oDetritus8, oDetritus7))
with ThisClutter {
image_angle = random(360)
SetSpinning(-2.9,-1,1,2.9)
direction = random(360)
speed = random_range(150,350) / room_speed
}
ClutterToDistribute = ClutterToDistribute - 1
} else if ClutterToDistribute &lt;= 0 {
MSecondsBetweenClutter = random(100)
ClutterToDistribute = random(60)
}
}

if global.MetGrenadeDet = false {
if TimeToDisplayText &gt; 0 {
TimeToDisplayText = TimeToDisplayText - 1
} else if TimeToDisplayText &lt;= 0 {
global.MetGrenadeDet = true
}
}

if TimeToDisplayText &gt; 0 {
if MessageFlash = "Fading" {
if MessageAlpha &gt; 0 {
MessageAlpha = MessageAlpha - FadeRate
} else if MessageAlpha &lt;= 0 {
MessageFlash = "Growing" 
} 
} else if MessageFlash = "Growing" {
if MessageAlpha &lt; 1 {
MessageAlpha = MessageAlpha + FadeRate
} else if MessageAlpha &gt;= 1 {
MessageFlash = "Fading"
}
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if TimeToDisplayText &gt; 0 {

draw_set_alpha(MessageAlpha)

posx = x - view_xview[0]
posy = y - view_yview[0]

draw_set_font(fHidingText)
draw_set_color(c_aqua)
draw_set_halign(fa_right)
draw_set_valign(fa_right)

draw_text(posx + 500,posy,"Class 'Multa' Grenade Bay OS v.1.8.4#====================##++ALARM ALARM!++#Payload Arms 1 - 5 Damaged!")
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
