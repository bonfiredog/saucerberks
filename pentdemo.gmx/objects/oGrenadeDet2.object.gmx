<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGrenadeDet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oSpecialSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 80
InitialiseEnemyCollision(random_range(20,35),360)
image_xscale = 1.3
image_yscale = image_xscale
image_angle = random(360)
SecondsBetweenEmits = random_range(50,150) / room_speed
instance_create(x,y,oGrenadeTarget)
SetSpinning(-1,-1,1,1)
TimeBetweenClutter = random_range(30,90)
MSecondsBetweenClutter = random(200)
ClutterToDistribute = random(25)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Bouncing */
StayInsideRoom()

image_angle = image_angle + SpinDirection


/* Emitting */
if SecondsBetweenEmits &gt; 0 {
SecondsBetweenEmits = SecondsBetweenEmits - 1 }
else if SecondsBetweenEmits &lt;= 0 {

FindBounds()
NumberOfAttempts = 100

if NumberOfAttempts &gt; 0 {
EmitterXPos = irandom_range(SpriteLeft, SpriteRight)
EmitterYPos = irandom_range(SpriteTop, SpriteBottom)

if position_meeting(EmitterXPos, EmitterYPos, self.id) {
ThisEmitter = instance_create(EmitterXPos,EmitterYPos,choose(oSpecialSmoke,oSpecialSpark))
ThisEmitter.direction = direction
ThisEmitter.speed = speed
SecondsBetweenEmits = random_range(50,250) }
else {
NumberOfAttempts = NumberOfAttempts - 1
}
}
}

//Emit random clouds of debris, in random directions, every few moments.

if MSecondsBetweenClutter &gt; 0 {
MSecondsBetweenClutter = MSecondsBetweenClutter - 1 
} else if MSecondsBetweenClutter &lt;- 0 {
if ClutterToDistribute &gt; 0 {
ThisClutter = instance_create(x,y,choose(oDetritus10, oDetritus6, oDetritus9, oDetritus4, oDetritus8, oDetritus7))
with ThisClutter {
image_angle = random(360)
SetSpinning(-1.9,-1,1,1.9)
direction = random(360)
speed = random_range(100,300) / room_speed
}
ClutterToDistribute = ClutterToDistribute - 1
} else if ClutterToDistribute &lt;= 0 {
MSecondsBetweenClutter = random(200)
ClutterToDistribute = random(25)
}
}













</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
