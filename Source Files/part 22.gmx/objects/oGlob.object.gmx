<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sLiquidShot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -10

SecondsUntilWeExplode = random_range(0.1,0.2)
Exploding = false

PuddleLifeTime = 2
SecondsUntilFadeOut = PuddleLifeTime

Host = noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Destroy when we leave the room */
if x &lt; 0 or y &lt; 0 or x &gt; room_width or y &gt; room_height {
    instance_destroy()    
}

//If we're about to hit a block
if place_meeting(x + hspeed, y + vspeed, oSolid) {
    //Stop
    speed = 0
}

Deceleration = 400 / (room_speed * room_speed)
if speed &gt; Deceleration {
    speed = speed - Deceleration
} else {
    speed = 0
}

//If we're stuck to someone
if instance_exists(Host) {

    //Follow the guy we stuck to
    x = Host.x
    y = Host.y
    image_xscale = 1.5
    image_yscale = 1.5
        
//If we haven't stuck to anyone yet
} else {
    
    //Did we hit anyone at all?
    EnemyHit = instance_place(x,y,oEnemy)
    if instance_exists(EnemyHit) {
        //If so, was it the type we can stick to?
        if EnemyHit.object_index = oSwarmer {
            //If so, make that enemy our new host
            Host = EnemyHit
            EnemyHit.xShunt = lengthdir_x(speed,direction)
            EnemyHit.yShunt = lengthdir_y(speed,direction)
        }
    }
        
    if instance_exists(self.id) {
        if speed = 0 {
            SecondsUntilFadeOut = SecondsUntilFadeOut - 1/room_speed
            image_alpha = SecondsUntilFadeOut / PuddleLifeTime
            image_xscale = 1 + (1 - image_alpha)
            image_yscale = image_xscale
            if image_alpha &lt;=0 { instance_destroy() }
        }
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>15,14</point>
    <point>15,15</point>
  </PhysicsShapePoints>
</object>
