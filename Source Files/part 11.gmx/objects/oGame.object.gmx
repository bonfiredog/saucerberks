<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/* Enemy Spawning */
SecondsBetweenEnemySpawns = 1
SecondsSinceLastEnemySpawn = 0

/* Global constants */
BitsReassembled = 0
NumberOfBitsThePlayerIsMadeOf = 9

/* Screen Bullshit */

window_set_fullscreen(false) //Just for my purposes, since I'm stuck in windowed mode

//How big is the screen?
ScreenWidth = display_get_width() - 100 //-100 Just for my purposes, since I'm stuck in windowed mode
ScreenHeight = display_get_height() - 100 //-100 Just for my purposes, since I'm stuck in windowed mode

//Set size of window - you don't need to do this in full screen
window_set_size(ScreenWidth,ScreenHeight)

//How much of the room do we want on-screen?
view_wview = ScreenWidth
view_hview = ScreenHeight

//How much of our screen do we want that to take up?
view_wport = ScreenWidth
view_hport = ScreenHeight

//Some weird game maker bullshit
surface_resize(application_surface,ScreenWidth,ScreenHeight)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Enemy spawning */
SecondsSinceLastEnemySpawn = SecondsSinceLastEnemySpawn + 1/room_speed

if SecondsSinceLastEnemySpawn &gt;= SecondsBetweenEnemySpawns {
    //spawn enemy
    if choose(true,false) {
        SpawnX = random(room_width)
        SpawnY = choose(0, room_height)
    } else {
        SpawnX = choose(0, room_width)
        SpawnY = random(room_height)
    }
    
    instance_create(SpawnX, SpawnY, choose(oShrinkingEnemy,oExplodingEnemy,oExplodingEnemy))
    SecondsSinceLastEnemySpawn = 0
    
}
    

//Quit key
if keyboard_check_pressed(vk_escape) {
    game_end()
}

//Restart key
if keyboard_check_pressed(ord('R')) {
    game_restart()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
